package Game_World_Objects;

import java.awt.Graphics;
import java.awt.Image;
import java.awt.Point;
import java.awt.Rectangle;

import Graphics_Renderer.GraphicsRenderer;
import Object_Interfaces.GameObject;

public class Trap implements GameObject{

	Rectangle boundingBox;
	int damage;

	public Trap(Point p,int d) {
		boundingBox = new Rectangle(p.x, p.y, 40, 40);
		damage = d;
	}
	
	public Trap(){} // default constructor for XML


	@Override
	public void draw(Graphics g) {
g.drawImage(GraphicsRenderer.getImage("Trap"), boundingBox.x, boundingBox.y, null);
	}

	@Override
	public int compareTo(GameObject other) {
		return this.getRect().y - other.getRect().y;
	}

	@Override
	public Image toIcon() {
		return GraphicsRenderer.getImage("Trap").getScaledInstance(34, 34, Image.SCALE_DEFAULT);
	}

	@Override
	public boolean containsPoint(Point p) {
		return boundingBox.contains(p);
	}

	@Override
	public boolean isOverlapping(Rectangle p) {
		return boundingBox.intersects(p);
	}

	@Override
	public String getName() {
		return "Trap that deals: "+damage+" damage.";
	}

	@Override
	public Rectangle getRect() {
		return boundingBox;
	}

	@Override
	public boolean setRect(Rectangle r) {
		this.boundingBox = r;
		return true;
	}

	public Rectangle getBoundingBox() {
		return boundingBox;
	}

	public void setBoundingBox(Rectangle boundingBox) {
		this.boundingBox = boundingBox;
	}

	public void setDamage(int damage) {
		this.damage = damage;
	}
	
	

	/**
	 * @return the damage
	 */
	public int getDamage() {
		return damage;
	}

	
}
